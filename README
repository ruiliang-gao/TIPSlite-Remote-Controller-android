* Issues / Some useful notes *

## SOFA SERVER SIDE (C++):

    1. c++ UDP communication examples:
    	https://causeyourestuck.io/2016/01/17/socket-cc-windows/
    	better e.g. https://www.winsocketdotnetworkprogramming.com/winsock2programming/winsock2advancedcode1e.html
    	TCP vs UDP: 
    		UDP is faster, simpler and more efficient than TCP. 
    		TCP is reliable as it maintains connection first, guarantees delivery of data to the destination router.

    2. Issue (Linking) : Undefined Reference to WSAStartup...
    	linking issue : https://stackoverflow.com/questions/34384803/c-undefined-reference-to-wsastartup8
    	in visual studio, just add "ws2_32.lib" to the linker

    3. Issue : Redefinition Header Files (winsock2.h)
    	The problem is when windows.h is included before WinSock2.h as windows.h includes winsock.h. The simple solution is to use winsock.h instead.
    	see https://stackoverflow.com/questions/1372480/c-redefinition-header-files-winsock2-h/3253327

    4. For UDP server, we must use "SOCK_DGRAM" and "IPPROTO_UDP" in the following socket function, default will be TCP;
    	server = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP); 

    5. c2678 :binary '==' no operator found which takes a left-hand operand of type
    	solution: Stop using "using namespace std" statements once and for all, this "bind()" conflicts with the STL std::bind function.

    6. Issue : c++ main thread been blocked by the server
    		solution:  do not use join(), as join() will block the calling thread until the thread represented by the boost::thread object has completed.
       Similar issue: how to handle java thread?
       		solution : https://www.youtube.com/watch?reload=9&v=QfQE1ayCzf8

    7. How to hanle two devices:
        server thread is in static function (to have only one server for two devices)
        update the non-static members in SOFA animation loop (onAnimationBeginEvent) and sync with the sever static vars


## Android CLIENT SIDE(java):

  1. Android Earth Coords: East-North-Up coordinates.
    Android rotation vector sensor return value[5] : (qx, qy, qz, qw, accuracy)
    // values[0]: x*sin(&#952/2)
    // values[1]: y*sin(&#952/2)
    // values[2]: z*sin(&#952/2)
    // values[3]: cos(&#952/2)
    // values[4]: estimated heading Accuracy (in radians) (-1 if unavailable)

  2.Features-list
	(done)figure out Quaternion!!!!!
		vecToolTipDirectionInSOFA = androidQuat * (correctionQuat?) * initialCameraViewQuat * defaultToolTipDirectionVector;
		figure out initialCameraViewQuat...
	(done) figure out how to switch between udp and HD (for now HD does not respond when udp is active)
	(done) two-way communicatio: vibration on the phone when collide in SOFA
	(done) set ActionButton to be the Hardware VolumeControl Button
    (done) prevent multi-touch 
    (done) independent aspect ratio 
    (done) gesture based start detection
     obtain and transfer the ip info in an more automatic way.

  3. win10 IP/Port instruction:
	Run the windows "cmd" as administrator
	To find ipv4 address: ipconfig | findstr /R /C:"IPv4 Address"
	To open a port: netsh advfirewall firewall add rule name="TIPS Port 5556" dir=in action=allow protocol=UDP localport=5556